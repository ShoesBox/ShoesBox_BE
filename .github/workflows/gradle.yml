# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# GitHub에서 볼 수 있는 Action 이름
name: Java CI with Gradle

# 이벤트 트리거.
# 특정 이벤트(push, pull_request 등)가 명시한 브랜치에서 발생하면 이 Action이 수행된다.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# 실제 수행할 작업
jobs:
  # 스크립트 실행 환경 (OS)
  build:
    runs-on: ubuntu-18.04
    # 실제 실행 스크립트
    steps:
      # uses는 github actions에서 제공하는 플러그인을 실행
      # git checkout
      - uses: actions/checkout@v3
      # JDK 11 설치해서 사용
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        ## with는 플러그인 파라미터
        with:
          java-version: '11'
          distribution: 'zulu'

      # create application-keys.yml
      - name: Create key files
        run: |
          echo "ls -a . & pwd"
          pwd
          ls -a .
          echo "mkdir & touch"
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application-keys.yml
          pwd
          ls -a .
          echo "copy keys"
          echo SPRING >> ./application-keys.yml
          echo JWT_KEYS >> ./application-keys.yml
          echo AWS_KEYS >> ./application-keys.yml
          cat application-keys.yml
        shell: bash
        env:
          AWS_KEYS: ${{ secrets.AWS_KEYS }}
          JWT_KEYS: ${{ secrets.JWT_KEYS }}
          SPRING: ${{ secrets.SPRING }}

      # gradle 사용. arguments가 실행할 명령
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build
